# Simple workflow for deploying static content to GitHub Pages
name: Deploy pdf

on:
  # 除錯先關自動
  #push:
    #branches: ["master","workflow"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 1. 取代舊版 checkout
      - uses: actions/checkout@v4   # 官方建議使用 latest v4 tag
        with:
            ref: workflow

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      # 2. 安裝相依並產生靜態檔
      - name: Build HTML
        run: |
          # 安裝你需要的 npm 套件
          node --version
          npm --version
          npm i a4pic2pdf@2.3.0
          # Install Jekyll and build the site
          pip install -r requirements.txt
          
          # 1) 把所有使用者 ID 放進 Bash array
          USERS=(
            6431444 6456506 1590773 3794751 6570000
            6605803 6651902 6745063 2373177 6791331
            6792228 6886356 6926121 6977703 6612572
            6743571 6551128 3794592 6946100
          )

          # 2) 用 printf 逐行列出 → xargs 讀進去並平行執行
          printf '%s\n' "${USERS[@]}" \
          | xargs -P 5 -n 1 -I {} bash -c 'python download_user_pic.py --user={}'

          echo "🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪"
          python csv2html.py

      # 3. 寫入 Pages metadata
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5   # 新版 v5

      # 4. 打包並上傳符合 Pages 規範的 artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build              # 指向靜態檔根目錄
          # 不必再手動指定 name=github-pages；Action 會自動處理

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4      # 與官方示例一致
