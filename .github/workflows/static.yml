name: Deploy static content to Pages

on:
  workflow_dispatch:      # 手動觸發；如需 push 自動部署再打開

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      # 1. 取代舊版 checkout
      - uses: actions/checkout@v4   # 官方建議使用 latest v4 tag
        with:
            ref: workflow

      # 2. 安裝相依並產生靜態檔
      - name: Build HTML
        run: |
          # Install Jekyll and build the site
          pip install -r require.txt
          echo -e "python download_user.py --user=6977703\n\
          python download_user.py --user=6456506" | xargs -P 5 -I {} bash -c "{}"
          echo "🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪🤪"
          # Run the final command after all previous ones finish
          python csv2html.py

      # 3. 寫入 Pages metadata
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5   # 新版 v5

      # 4. 打包並上傳符合 Pages 規範的 artifact
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build              # 指向靜態檔根目錄
          # 不必再手動指定 name=github-pages；Action 會自動處理

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4      # 與官方示例一致
